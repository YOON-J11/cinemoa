<!doctype html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>cinemoa</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/pretendard@latest/dist/web/static/pretendard.css"/>
    <link rel="stylesheet" href="/css/reset.css"/>
    <link rel="stylesheet" href="/css/member/join.css"/>
</head>
<body>
<div class="container">
    <!-- 로고 -->
    <div class="logo-area">
        <a href="/" class="logo">
            <svg xmlns="http://www.w3.org/2000/svg" version="1.0" viewBox="0 0 1831 512">
                <path fill="currentColor" d="M62 64.7c-8.5 1.4-15.9 7.6-17.9 14.9-1.5 5.4-1.5 347.3 0 352.7 1.3 4.7 6.7 10.9 11.7 13.3 3.6 1.8 10.9 1.9 199.7 1.9 158.4 0 196.7-.2 199.7-1.3 4.7-1.7 11.3-8.9 12.7-13.8 1.5-5.4 1.5-347.3 0-352.7-1.3-4.7-6.7-10.9-11.7-13.3-3.6-1.8-11-1.9-197.7-2-106.7-.1-195.1 0-196.5.3zm66 63.3v22H85v-44h43v22zm299 0v22h-43v-44h43v22zm-93.9 15c12 3.8 21.1 12.9 24.9 24.9 1.8 5.6 2 9.1 2 31.7V225h-58v-32h-92v126h92v-37h58v27.9c0 25-.2 28.5-2 34.2-3.5 11.4-12.8 20.9-24.4 25-5.3 1.8-8.8 1.9-76.9 1.9-62.2 0-72-.2-76.8-1.6-10.8-3.2-19.9-11-24.8-21.3l-2.6-5.6v-172l2.3-5.7c2.5-6.2 9.3-14.5 14.7-17.8 1.9-1.2 5.8-3 8.7-4 5-1.8 9.1-1.9 76.9-2 69 0 71.9.1 78 2zM128 213.5V235H85v-43h43v21.5zm299 0V235h-43v-43h43v21.5zm-299 85V320H85v-43h43v21.5zm299 0V320h-43v-43h43v21.5zM128 384v22H85v-44h43v22zm299 0v22h-43v-44h43v22zM512 256v115h60V141h-60v115zM606 256v115h62V224.5l9.6 18c5.3 9.9 16.1 29.9 23.9 44.5 7.8 14.6 21.1 39.4 29.6 55.2l15.4 28.8H813V141h-57l-.2 75.9-.3 75.9-12.6-22.7c-6.9-12.4-25.6-46.6-41.5-75.8L672.5 141H606v115zM879 142.1c-14.5 2.5-26.1 11.9-31.2 25.5-2.3 5.9-2.3 6-2.6 83.2-.2 46.3.1 80.1.7 84.3 2.6 18.8 15.8 32.3 34.3 34.9 3.5.5 42.2 1 86.1 1h79.7v-51H902v-44h139v-46H902v-38h144v-51l-80.7.1c-44.5.1-83.3.5-86.3 1zM1075 256v115h57.1l-.3-76.5c-.2-42 0-76.1.4-75.7.4.5 43 135.5 47.4 150.4.5 1.7 2.6 1.8 26.7 1.8h26.2l24-76.1c13.2-41.8 24.2-76.2 24.5-76.4.3-.2.4 34.1.2 76.1l-.3 76.4h57.1V141h-77.8l-1.1 3.2c-.5 1.8-10.2 32.1-21.5 67.3-17 53.3-23 72.6-30.3 97.8-.2 1-.7 1.7-.9 1.5-.2-.2-2.8-8.7-5.8-18.9-3-10.1-14.7-47.2-25.9-82.4-11.3-35.2-20.8-65-21.2-66.3l-.6-2.2H1075v115zM1404 142.1c-12.6 2.1-24.4 10.8-29.5 21.6-4.3 9.1-4.6 15.8-4.3 97.8.3 72.6.5 77.3 2.2 82 4.7 12.4 12.7 20.4 25.1 25.1 4.7 1.7 9.3 1.9 71.9 2.2 44.2.2 69.3-.1 74-.8 18.6-2.8 32-16.1 34.7-34.3 1.2-8.9 1.1-151.6-.2-159.7-2.9-18.2-16.2-31.5-34-34-8.2-1.2-132.6-1.1-139.9.1zM1522 256v64h-95V192h95v64zM1629.1 255.2c-21 62.9-38.1 114.6-38.1 115.1 0 .4 13.8.6 30.8.5l30.7-.3 8.6-25.5 8.6-25.5 41.6-.3 41.6-.2 1.1 3.7c.5 2.1 4.1 13.7 7.8 25.8l6.7 22 30.8.3c24.2.2 30.7 0 30.6-1 0-.7-15.9-52.4-35.2-114.8l-35.2-113.5-46.2-.3-46.1-.2-38.1 114.2zm86.9-61.7c1.4 6.6 7.1 26.8 16.1 56.7 3.2 10.8 5.9 20.1 5.9 20.7 0 .8-8.1 1.1-26 1.1-14.3 0-26-.2-26-.4s5.1-15.9 11.4-34.8c6.2-18.8 12.4-38.3 13.7-43.1 2.4-9.6 3-9.6 4.9-.2z" />
            </svg>
        </a>
    </div>
    <!-- 진행 단계 표시 -->
    <ul class="step-indicator">
        <li class="current">STEP1. 메일인증</li>
        <li>STEP2. 약관동의</li>
        <li>STEP3. 정보입력</li>
        <li>STEP4. 가입완료</li>
    </ul>

    <div class="email-box">
        <div class="email-icon">
            <svg xmlns="http://www.w3.org/2000/svg" id="Layer_1" data-name="Layer 1" viewBox="0 0 24 24">
                <path d="M19.5,2H4.5C2.019,2,0,4.019,0,6.5v11c0,2.481,2.019,4.5,4.5,4.5h15c2.481,0,4.5-2.019,4.5-4.5V6.5c0-2.481-2.019-4.5-4.5-4.5ZM4.5,3h15c1.084,0,2.043,.506,2.686,1.283l-7.691,7.692c-.662,.661-1.557,1.025-2.497,1.025-.914-.017-1.826-.36-2.492-1.025L1.814,4.283c.643-.777,1.601-1.283,2.686-1.283Zm18.5,14.5c0,1.93-1.57,3.5-3.5,3.5H4.5c-1.93,0-3.5-1.57-3.5-3.5V6.5c0-.477,.097-.931,.271-1.346l7.528,7.528c.851,.851,1.98,1.318,3.177,1.318s2.375-.467,3.226-1.318l7.528-7.528c.174,.415,.271,.869,.271,1.346v11Z"/>
            </svg>
        </div>
        <div class="info-text">회원가입을 위해 이메일 인증이 필요합니다.<br>아래 버튼을 눌러 인증을 시작해 주세요.</div>
        <button type="button" id="startEmailBtn">이메일 인증하기</button>
    </div>

    <!-- 이메일 인증 폼 -->
    <form method="post" action="/member/join/verify-email" id="emailForm" class="hidden" onsubmit="return false;">
        <div class="input-group">
            <label for="email">이메일 주소</label>
            <input type="email" id="email" name="email" required placeholder="example@domain.com">
            <div id="emailError" style="color: red; display: none;">유효한 이메일 주소를 입력해주세요.</div>
        </div>

        <button type="button" id="sendCodeBtn">인증번호 전송</button>

        <div id="verifySection" class="hidden">
            <div class="input-group">
                <span class="inline-timer" id="timer">05:00</span> <!-- 타이머를 위로 이동 -->
                <input type="text" id="authCode" placeholder="인증번호 입력" name="authCode" required>
                <div id="verifyResult" class="hidden"></div> <!-- 인증 결과 메시지는 입력창 아래 그대로 유지 -->
            </div>

            <button type="button" id="resendBtn">재전송</button>
            <button type="submit">인증 확인</button>
        </div>

    </form>
</div>


<script>
    // === STEP0: 요소 참조 ===
    const startBtn = document.getElementById('startEmailBtn');
    const emailForm = document.getElementById('emailForm');
    const sendCodeBtn = document.getElementById('sendCodeBtn');
    const verifySection = document.getElementById('verifySection');
    const emailInput = document.getElementById('email');
    const timerDisplay = document.getElementById('timer');
    const emailError = document.getElementById('emailError');
    const resendBtn = document.getElementById('resendBtn');
    const authCodeInput = document.getElementById('authCode');
    const confirmBtn = document.querySelector('#verifySection button[type="submit"]');

    let timer;
    let timeLeft = 300; // 5분

    // === STEP1: "이메일 인증하기" 버튼 클릭 시 인증 폼 보여주기 ===
    startBtn.addEventListener('click', () => {
        startBtn.parentElement.classList.add('hidden');
        emailForm.classList.remove('hidden');
    });

    // === STEP2: 이메일 유효성 검사 ===
    emailInput.addEventListener('input', () => {
        const email = emailInput.value.trim();
        const isValid = /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);
        sendCodeBtn.disabled = !isValid;
        emailError.style.display = isValid ? 'none' : 'block';
    });

    // === STEP3: 인증번호 전송 요청 함수 (전송/재전송 공통) ===
    function sendAuthCodeRequest(eventTarget) {
        const email = emailInput.value.trim();
        if (!email) return;

        sendCodeBtn.disabled = true;
        resendBtn.disabled = true;

        // 기존 스피너 제거
        const oldSpinner = document.querySelector('.btn-spinner');
        if (oldSpinner) oldSpinner.remove();

        // 새로운 스피너 생성
        const spinner = document.createElement('span');
        spinner.className = 'btn-spinner';
        spinner.innerHTML = `<img src="/images/icons/loading.gif" alt="loading" style="width:18px; vertical-align: middle; margin-left: 10px;">`;

        eventTarget.parentElement.appendChild(spinner); // 버튼 옆에 추가

        fetch('/member/send-auth-code', {
            method: 'POST',
            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
            body: new URLSearchParams({ email })
        })
        .then(res => res.json())
        .then(data => {
            spinner.remove();
            if (data.status === 'success') {
                resetAuthUI();
                sendCodeBtn.remove(); // 최초 전송 버튼은 제거
            } else {
                alert("인증번호 전송에 실패했습니다.");
            }
            resendBtn.disabled = false;
        })
        .catch(() => {
            alert("에러가 발생했습니다.");
            spinner.remove();
            sendCodeBtn.disabled = false;
            resendBtn.disabled = false;
        });
    }

    // === STEP4: 인증 UI 초기화 및 타이머 시작 ===
    function resetAuthUI() {
        verifySection.classList.remove('hidden');
        authCodeInput.disabled = false;
        confirmBtn.style.display = 'inline-block';
        confirmBtn.disabled = false;
        confirmBtn.textContent = '인증 확인';

        // 타이머 초기화
        timeLeft = 300;
        startTimer();
    }

    // === STEP5: 버튼 이벤트 연결 ===
    sendCodeBtn.addEventListener('click', () => sendAuthCodeRequest(sendCodeBtn));
    resendBtn.addEventListener('click', () => sendAuthCodeRequest(resendBtn));

    // === STEP6: 인증번호 확인 후 결과 메시지 출력 ===
    confirmBtn.addEventListener('click', () => {
        const code = authCodeInput.value.trim();
        const email = emailInput.value.trim();

        fetch('/member/verify-auth-code', {
            method: 'POST',
            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
            body: new URLSearchParams({ email, code })
        })
        .then(res => res.json())
        .then(data => {
            let resultMsg = document.getElementById('verifyResult');
            if (!resultMsg) {
                resultMsg = document.createElement('div');
                resultMsg.id = 'verifyResult';
                resultMsg.style.marginTop = '8px';
                authCodeInput.parentElement.appendChild(resultMsg);
            }

            if (data.status === 'verified') {
                resultMsg.textContent = '✅ 인증이 완료되었습니다.';
                resultMsg.style.color = 'green';

                confirmBtn.textContent = '다음 단계';
                confirmBtn.disabled = false;

                // 다음단계 버튼이 곧바로 전송되게 하려면 form 제출 처리 추가 가능
                confirmBtn.onclick = () => emailForm.submit();
            } else {
                resultMsg.textContent = '❌ 인증번호가 올바르지 않습니다.';
                resultMsg.style.color = 'red';
            }
        });
    });

    // === STEP7: 타이머 시작 ===
    function startTimer() {
        clearInterval(timer);
        updateTimerDisplay();

        timer = setInterval(() => {
            timeLeft--;
            if (timeLeft <= 0) {
                clearInterval(timer);
                timerDisplay.textContent = '만료됨';
                authCodeInput.disabled = true;
                confirmBtn.disabled = true;
                confirmBtn.textContent = "시간초과";
            } else {
                updateTimerDisplay();
            }
        }, 1000);
    }

    // === STEP8: 타이머 숫자 표시 ===
    function updateTimerDisplay() {
        const min = String(Math.floor(timeLeft / 60)).padStart(2, '0');
        const sec = String(timeLeft % 60).padStart(2, '0');
        timerDisplay.textContent = `${min}:${sec}`;
        timerDisplay.style.color = 'red';
    }
</script>





</body>
</html>